@import_c("stdlib.h");

let TokenType = enum {
    Identifier,
};

let Token = struct {
    start_index: u32,
    size: u16,
    type: TokenType,
};
inline_c typedef struct Token* TokenP;

let Tokens = struct {
    data: TokenP,
    size: u32,
    capacity: u32,
};
inline_c typedef struct Tokens* TokensP;

pub fn tokens_init(tokens: TokensP) -> i32 {
    let starting_capacity = 1024;
    var data = malloc(starting_capacity);
    if data == 0 {
        return -1;
    }
    inline_c *tokens = (Tokens) {
        .data = data,
        .size = 0,
        .capacity = starting_capacity
    };
    return 0;
}

pub fn tokens_deinit(tokens: TokensP) -> void {
    var data = inline_c tokens->data;
    free(data);
}

